@database @"AmigaGPT.guide"
@{b}AUTHOR Cameron Armstrong (Nightfox/sacredbanana)@{ub}
@wordwrap

@node Main "AmigaGPT"
@{b}AmigaGPT@{ub}

Welcome to the future of language modeling on the classic AmigaOS, AmigaGPT. Built on the powerful OpenAI's GPT-3 and GPT-4 architectures, this program will take your Amiga experience to new horizons.

@{b}Click on any topic to learn more.@{ub}

@{"Introduction " link intro}
@{"System Requirements " link requirements}
@{"Installation " link installation}
@{"Launching " link launching}
@{"Usage " link usage}
@{"Models " link models}
@{"Developing " link developing}
@{"License " link license}
@{"Contributing " link contributing}
@{"Contributors and Special Thanks " link credits}
@{"Changelog " link changelog}

@endnode

@node intro "Introduction"
AmigaGPT is a versatile ChatGPT client for AmigaOS 3.x, 4.1 and MorphOS. This powerful tool brings the capabilities of OpenAI’s GPT to your Amiga system, enabling text generation, question answering, and creative exploration. AmigaGPT can also generate stunning images using DALL-E and includes support for speech output, making it easier than ever to interact with AI on your Amiga. Designed to integrate seamlessly with your system, AmigaGPT delivers modern AI technology while embracing the timeless Amiga experience.

@{b}Features@{ub}

AmigaGPT boasts a variety of exciting features:

- @{b}State-of-the-art language model@{ub}
AmigaGPT uses the o1, GPT-4o, GPT-4 and GPT-3.5 models developed by OpenAI to generate coherent, context-aware responses to your input.

- @{b}Seamless integration with AmigaOS@{ub}
AmigaGPT takes full advantage of the MUI framework to provide a smooth, native user experience that is responsive and easy to use.

- @{b}UI customisation@{ub}
You can customise the look and feel of the application, including the ability to choose the fonts, colours and a choice of opening in the Workbench screen or a custom screen.

- @{b}Speech capability@{ub}
AmigaGPT has support for OpenAI's high quality 16 bit voices. For AmigaOS 3, AmigaGPT can use the Amiga's speech synthesis capability to read the generated text aloud with support for switching between the old Workbench 1.x @{b}v34@{ub} and the Workbench 2.0 @{b}v37@{ub} speech synthesisers. For AmigaOS 4.1, it has support for `flite.device`.
@endnode

@node requirements "System Requirements"

@{b}System Requirements@{ub}

For smooth operation of AmigaGPT, your system needs to meet the following requirements:

@{" "}

- An OCS/ECS/AGA Amiga or a PowerPC machine capable of running MorphOS
- AmigaOS 3.1 or higher, AmigaOS 4.1 or MorphOS
- Motorola 68020 or higher CPU or PowerPC for AmigaOS 4/MorphOS
- Internet access using a TCP/IP stack such as Roadshow
- MUI 3 minimum but MUI 5 recommended for all features (https://github.com/amiga-mui/muidev/releases)
- MCC_Guigfx MUI custom class for displaying images (http://aminet.net/package/dev/mui/MCC_Guigfx)
- MCC_NList MUI custom class for lists (http://aminet.net/package/dev/mui/MCC_NList-0.128)
- codesets.library 6.22 or higher (http://aminet.net/package/util/libs/codesets-6.22)
- For AmigaOS 3 & 4, AmiSSL 5.18 or higher
  (https://aminet.net/package/util/libs/AmiSSL-v5-OS3) for OS3 and
  (https://aminet.net/package/util/libs/AmiSSL-v5-OS4) for OS4
- An OpenAI account with an active API key
- Optional: For speech on AmigaOS 3, any version of narrator.device
- Optional: For speech on AmigaOS 4, Flite Device
- Optional: For OpenAI speech, AHI is required
 (http://aminet.net/package/driver/audio/ahiusr_4.18)

@endnode

@node installation "Installation"

@{b}Installation@{ub}

Follow the steps for successful installation:

@{" "}

- For AmigaOS 3 & 4, Install AmiSSL and a TCP/IP stack if not already done so
- Download and install MUI. Version 5 recommended, version 3 minimum. Reboot.
- Download and install MCC_Guigfx, MCC_NList and codesets.library
- Download the latest release of AmigaGPT
- Extract the amigagpt.lha archive to your desired location

@{b}Optional steps to enable speech functionality@{ub}

AmigaGPT supports reading the output aloud. How AmigaGPT does this depends on whether you are using AmigaOS 3 or 4. Or for OpenAI voices, this works on every system.

@{b}AmigaOS 3@{ub}

Native speech on AmigaOS 3 requires a file called `narrator.device` which cannot be included with AmigaGPT because it is still under copyright. Therefore, you must copy this file legally from your Workbench disks so that AmigaGPT will be able to synthesise speech. There are 2 versions of `narrator.device` supported, v34 and v37. 

v34 is the original version that came with Workbench 1.x.

v37 was an updated version included with Workbench 2.0.x. It has more features and sounds more natural, however it does sound quite different which is why AmigaGPT supports you installing both versions and your choice of version to be used can be selected in the Speech menu in the app.

Regardless of which version of 'narrator.device' you choose to install (or both), AmigaGPT requires that you install the free third party `translator.library; v43. This works with both versions of 'narrator.device'.

OpenAI's 16 bit speech is done with AHI.

@{"Installing `translator.library` v43 " link tran43}
@{"Installing `narrator.device` v34 " link narrator34}
@{"Installing `narrator.device` v37 " link narrator37}
@{"Installing AHI " link ahi}

@{b}AmigaOS 4@{ub}

Native speech on AmigaOS 4 is done with the help of Flite Device.

OpenAI's 16 bit speech is done with AHI.

@{"Installing flite.device " link flite}
@{"Installing AHI " link ahi}

@endnode

@node tran43 "Installing translator.library v43"

@{b}Installing `translator.library` v43@{ub}

Since `translator.library` v43 is not available as a standalone install, you will need to install v42 and then patch it to v43.

- Download http://aminet.net/util/libs/translator42.lha and extract the archive to any convenient location on your Amiga such as `RAM:`
- Navigate to that directory and double click the `Install` program
- Run the installer using all the default settings
- Download http://aminet.net/util/libs/Tran43pch.lha and once again extract it to a location of your choice
- Navigate to that directory and double click the `Install` program
- Run the installer using all the default settings
- Reboot your Amiga - It will not work until the system is restarted

@endnode

@node narrator34 "Installing `narrator.device` v34"

@{b}Installing `narrator.device` v34@{ub}

Insert your Workbench 1.x disk and copy `df0:devs/narrator.device` to `{AmigaGPTProgramDirectory}/devs/speech/34`

@endnode

@node narrator37 "Installing `narrator.device` v37"

@{b}Installing `narrator.device` v37@{ub}

Insert your Workbench 2.0.x (you cannot use 2.1 because the speech libraries were removed after version 2.0.4) disk and copy `df0:devs/narrator.device` to `{AmigaGPTProgramDirectory}/devs/speech/37`

@endnode

@node ahi "Installing `AHI` for OpenAI voices

@{b}Installing AHI@{ub}

If your OS doesn't come with AHI, you can download it from http://aminet.net/package/driver/audio/ahiusr_4.18

@endnode

@node flite "Installing flite.device"

- Download Flite Device from http://aminet.net/package/mus/misc/flite_device
- Extract the archive and run the installer

@endnode

@node launching "Launching AmigaGPT"
@{b}Launching AmigaGPT@{ub}

- Launch the application by double-clicking the AmigaGPT icon
- You may also launch the app in the command line but before you do, run the command `STACK 20000` to give the program 20kb of stack since the default stack size for apps launched from the shell is 4kb and this is not enough for AmigaGPT and will cause random crashes due to stack overflow. This is not required when you launch the app by double clicking the icon since the stack size is saved in the icon.

@endnode

@node usage "Usage"
@{b}Using AmigaGPT@{ub}

Click on a topic to learn about it:

@{"Screen select " link screen}
@{"Entering your OpenAI API key " link apikey}
@{"Chatting with ChatGPT " link chatting}
@{"Generating images " link images}
@{"Conversation list " link conlist}
@{"Edit menu " link editmenu}
@{"Changing the appearance of the UI and chat " link appearance}
@{"Using a proxy server" link proxy}

@endnodeƒ

@node screen "Screen select"
@{b}Selecting a screen to open AmigaGPT in@{ub}

When launched, AmigaGPT presents you with a choice of opening the app in a new screen or opening in Workbench. If you open in a new screen you have the ability to create a screen for the app to open in. AmigaGPT supports anything from 320x200 all the way up to 4k resolution if using a video card for RTG. Bear in mind text will appear very tiny in resolutions above 1080p so you may want to increase the font size settings from the View menu when the app opens.

There are 2 main modes of operation: Chat and Image Generation. You can switch between them via the tabs in the top left corner.

@endnode

@node apikey "Entering your OpenAI API key"
@{b}Entering your OpenAI API key@{ub}

When launching for the first time you will need to enter your OpenAI API key before you can start chatting. If you haven't already done so, create an OpenAI account and navigate to https://platform.openai.com/account/api-keys to generate an API key for use with AmigaGPT.

@endnode

@node chatting "Chatting with ChatGPT"
@{b}Chatting with ChatGPT@{ub}

When the app has opened, you are presented with a text input box. You can type any prompt into this box and press "Send" or Shift + Enter to see ChatGPT's response. The generated text appears in the box above the input. Depending on if you have speech configured and enabled, you will also hear it spoken to you.

You can choose to have this text read aloud using the "Speech" menu option. You can also select which model for OpenAI to use in the "OpenAI" menu option.

@endnode

@node conlist "Conversation list"
@{b}Conversation list@{ub}

To the left of the chat box is a conversation list which you can use to go to another saved conversation. New conversations can be created with the "New chat" button and conversations can be removed with the "Delete chat" button. Your conversations will get saved and they will appear again the next time you open AmigaGPT.

@endnode

@node images "Generating images"
@{b}Generating Images@{ub}

To generate images, simply select your desired image generation model from the "OpenAI" menu then type your prompt in the text box then hit the "Create Image" button. When it has been downloaded to your Amiga, you are then able to open the image to your desired scale, or save a copy of the file to a new location on your Amiga. Do note however that AmigaGPT will automatially save all your generated images until you delete them. This is just in case you would like to create a copy elsewhere.

@endnode

@node editmenu "Edit menu"
@{b}Edit menu@{ub}

In the "Edit" menu, you'll find basic text editing commands like Cut, Copy, Paste and Clear.

@endnode

@node appearance "Changing the appearance of AmigaGPT"
@{b}Changing the appearance of AmigaGPT@{ub}

You may change the appearance of the app including the fonts and colours.

To change your settings, go to the "MUI Settings" in the "View" menu.

@endnode

@node proxy "Using a proxy server"
@{b}Using a proxy server@{ub}

The "Connection" menu allows you to connect via a proxy server. It supports both HTTP and HTTPS proxy servers but if you use an unecrypted HTTP proxy server you can improve the performance of AmigaGPT by removing the need for the encryption of the OpenAI traffic to be done on the system running AmigaGPT. For an easy proxy server you can run on your local network you can try out https://mitmproxy.org

@endnode

@node developing "Developing"
@{b}Developing@{ub}

Source code hosted at https://github.com/sacredbanana/AmigaGPT

You can either compile the code natively or with the Docker container.

@{b}Native@{ub}

@{i}Building the AmigaOS 3 app@{ui}

If you would like to build this project from source you will need Bebbo's @{b}amiga-gcc@{ub} toolchain here https://github.com/bebbo/amiga-gcc

Once this is installed, download the additional SDK's (AmiSSL, Translator, json-c) from https://github.com/sacredbanana/AmigaSDK-gcc and put them in your Amiga development environment installed in the above step.

@{i}Building the AmigaOS 4 app@{ui}

Get this toolchain set up https://github.com/sba1/adtools

Once installed, get the required other SDK's (AmiSSL, Translator, json-c) from https://github.com/sacredbanana/AmigaSDK-gcc and put these in your Amiga dev environment created in the above step.

@{b}Docker@{ub}

You may use an all-in-one Docker image that is able to compile both the AmigaOS 3 and AmigaOS 4 versions of the app.

Just install Docker on your machine and run the `build_os3.sh` or `build_os4.sh` scripts depending on which version of the app you want to build.
If you want to perform a clean build, you can set the environment variable `CLEAN=1` for example you can run `CLEAN=1 ./build_os3.sh`.

The build app will be saved to the `/out` directory.

@endnode

@node contributing "Contributing"
@{b}Contributing to AmigaGPT@{ub}

We welcome contributions to AmigaGPT! If you have a bug to report, a feature to suggest, or a change you'd like to make to the code, please open a new issue or submit a pull request.

@endnode

@node credits "Contributors"
@{b}Contributors@{ub}

@{b}Code@{ub}
- Cameron Armstrong (sacredbanana/Nightfox) https://github.com/sacredbanana/

@{b}Art@{ub}
- Mauricio Sandoval - Icon design

@{b}Special Thanks@{ub}
- Bebbo for creating the Amiga GCC toolchain https://github.com/bebbo
- OpenAI for making this all possible https://openai.com
- EAB and everyone in it for answering my questions https://eab.abime.net/
- Ján Zahurančík for all the thorough testing, bundling AmigaGPT into 
  AmiKit and for all the moral support https://www.amikit.amiga.sk
- CoffinOS for bundling AmigaGPT into CoffinOS https://getcoffin.net
- Amiga Future Magazine for reviewing AmigaGPT and publishing several of
  its updates in the News from Aminet section https://www.amigafuture.de/
- WhatIFF? Magaine for reviewing AmigaGPT and interviewing me in issue 14
  https://www.whatiff.info
- Dan Wood for reviewing AmigaGPT on his YouTube channel
  https://www.youtube.com/watch?v=-OA28r8Up5U
- Proteque-CBN for reviewing AmigaGPT on his YouTube channel
  https://www.youtube.com/watch?v=t3q8HQ6wrnw
- AmigaBill for covering AmigaGPT in the Amiga News section on his Twitch
  streams and allowing me to join his stream to promote it
  https://www.twitch.tv/amigabill
- Les Docs for making a video review and giving a tutorial on how to add
  support for the French accent https://www.youtube.com/watch?v=BV5Fq1PresE


@endnode

@node license "License"
@{b}License@{ub}


@{b}AmigaGPT@{ub}


MIT License

Copyright (c) 2023 Cameron Armstrong

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


@{b}THIRD PARTY LICENSES@{ub}



@{b}json-c@{ub}


Copyright (c) 2009-2012 Eric Haszlakiewicz

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

----------------------------------------------------------------

Copyright (c) 2004, 2005 Metaparadigm Pte Ltd

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

@{b}jFlite@{ub}j

Flite is free software.

We have kept the core code to BSD-like copyright, thus the system is
free to use in commercial products, with commercial extensions.  GPL
code is only included as part of the build process and does not
taint any of the run-time code.  

Note the PalmOS code uses BSD code that requires acknowledgements in
any distribution documentation.

As a collection it is distributed under the following license.  Note
a few files in this distribution have a different but equally free
non-conflicting licence, see below.

                  Language Technologies Institute                      
                     Carnegie Mellon University                        
                      Copyright (c) 1999-2008                          
                        All Rights Reserved.                           
                                                                       
  Permission is hereby granted, free of charge, to use and distribute  
  this software and its documentation without restriction, including   
  without limitation the rights to use, copy, modify, merge, publish,  
  distribute, sublicense, and/or sell copies of this work, and to      
  permit persons to whom this work is furnished to do so, subject to   
  the following conditions:                                            
   1. The code must retain the above copyright notice, this list of    
      conditions and the following disclaimer.                         
   2. Any modifications must be clearly marked as such.                
   3. Original authors' names are not deleted.                         
   4. The authors' names are not used to endorse or promote products   
      derived from this software without specific prior written        
      permission.                                                      
                                                                       
  CARNEGIE MELLON UNIVERSITY AND THE CONTRIBUTORS TO THIS WORK         
  DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING      
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT   
  SHALL CARNEGIE MELLON UNIVERSITY NOR THE CONTRIBUTORS BE LIABLE      
  FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    
  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN   
  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,          
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF       
  THIS SOFTWARE.                                                       
                                                                       
All files within this distribution have the above license except
the following

src/cg/cst_mlpg.h
src/cg/cst_mlpg.c
src/cg/cst_mlsa.h
src/cg/cst_mlsa.c
src/cg/cst_vc.h
src/cg/cst_vc.c
/*********************************************************************/
/*                                                                   */
/*            Nagoya Institute of Technology, Aichi, Japan,          */
/*       Nara Institute of Science and Technology, Nara, Japan       */
/*                                and                                */
/*             Carnegie Mellon University, Pittsburgh, PA            */
/*                      Copyright (c) 2003-2004                      */
/*                        All Rights Reserved.                       */
/*                                                                   */
/*  Permission is hereby granted, free of charge, to use and         */
/*  distribute this software and its documentation without           */
/*  restriction, including without limitation the rights to use,     */
/*  copy, modify, merge, publish, distribute, sublicense, and/or     */
/*  sell copies of this work, and to permit persons to whom this     */
/*  work is furnished to do so, subject to the following conditions: */
/*                                                                   */
/*    1. The code must retain the above copyright notice, this list  */
/*       of conditions and the following disclaimer.                 */
/*    2. Any modifications must be clearly marked as such.           */
/*    3. Original authors' names are not deleted.                    */
/*                                                                   */    
/*  NAGOYA INSTITUTE OF TECHNOLOGY, NARA INSTITUTE OF SCIENCE AND    */
/*  TECHNOLOGY, CARNEGIE MELLON UNIVERSITY, AND THE CONTRIBUTORS TO  */
/*  THIS WORK DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,  */
/*  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, */
/*  IN NO EVENT SHALL NAGOYA INSTITUTE OF TECHNOLOGY, NARA           */
/*  INSTITUTE OF SCIENCE AND TECHNOLOGY, CARNEGIE MELLON UNIVERSITY, */
/*  NOR THE CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR      */
/*  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM   */
/*  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  */
/*  NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN        */
/*  CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.         */
/*                                                                   */
/*********************************************************************/

These functions are derived from the versions in festvox/src/vc/ as
modified by Tomoki Toda which in turn contain code derived from
NITECH's HTS system.  Their copyright has the same freedoms as 
as Flite's but under NAIST, NITECH and/or CMU.

src/audio/au_wince.c
src/utils/cst_file_stdio.c
src/utils/cst_mmap_posix.c
src/utils/cst_mmap_win32.c
src/utils/cst_mmap_none.c
src/utils/cst_file_wince.c
sapi/
      are copyright Cepstral, LLC rather than CMU but fall under the same
      free licence as the above, except for the owner.

doc/alice
   Is the first two chapters of Alice in Wonderland as distributed by the
   Gutenburg project and is now in the public domain

src/regex/regexp.c
src/regex/regsub.c

 *      Copyright (c) 1986 by University of Toronto.
 *      Written by Henry Spencer.  Not derived from licensed software.
 *
 *      Permission is granted to anyone to use this software for any
 *      purpose on any computer system, and to redistribute it freely,
 *      subject to the following restrictions:
 *
 *      1. The author is not responsible for the consequences of use of
 *              this software, no matter how awful, even if they arise
 *              from defects in it.
 *
 *      2. The origin of this software must not be misrepresented, either
 *              by explicit claim or by omission.
 *
 *      3. Altered versions must be plainly marked as such, and must not
 *              be misrepresented as being the original software.

src/speech/rateconv.c

 *	Copyright (c) 1992, 1995 by Markus Mummert
 *
 *	Redistribution and use of this software, modifcation and inclusion
 *	into other forms of software are permitted provided that the following
 *	conditions are met:
 *
 *	1. Redistributions of this software must retain the above copyright
 *	   notice, this list of conditions and the following disclaimer.
 *	2. If this software is redistributed in a modified condition
 *	   it must reveal clearly that it has been modified.

lang/usenglish/us_durz_cart.c
lang/usenglish/us_durz_cart.h
lang/usenglish/us_int_accent_cart.c
lang/usenglish/us_int_accent_cart.h
lang/usenglish/us_int_tone_cart.c
lang/usenglish/us_int_tone_cart.h
lang/usenglish/us_phoneset.c
lang/usenglish/us_f0lr.c
   These are directly (or indirectly) compiled/derived from files that are
   part of the Festival Speech Synthesis System (1.4.1).  Hence they have
   a joint copyright CMU/Edinburgh but with the same free licence

configure
   # Copyright (C) 1992, 93, 94, 95, 96 Free Software Foundation, Inc.
   #
   # This configure script is free software; the Free Software Foundation
   # gives unlimited permission to copy, distribute and modify it.

configure.sub
config.guess
missing
install-sh
mkinstalldirs
   Copyright FSF, and under the GPL, these files are only used for
   convenient configuration and are not part of the generated binary,
   and therefore do not impose any GPL restrctions on the rest of the
   system.  But as they are standard methods for configuration they 
   are included.

palm/include/peal.h
palm/include/pealstub.h
palm/arm_flite/pealstub.c
palm/m68k_flite/peal.c

/**********
 * Copyright (c) 2004 Greg Parker.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY GREG PARKER ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 **********/

The whole Sun Microsystems math library was ported to Palm
for this but its not actually needed, though the include file is
to allow bits of the system to compile that currently linked in
to the system, so we just have the include file here

palm/include/fdlibm.h

 * ====================================================
 * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
 *
 * Developed at SunSoft, a Sun Microsystems, Inc. business.
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice 
 * is preserved.
 * ====================================================

@{b}jFlite Device@{ub}j

/* Copyright (c) 2013 Fredrik Wikstrom. All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
**
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions and the following disclaimer.
**
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS'
** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
*/

@endnode

@node models "Models"
@{b}Models@{ub}

@{b}@{u}Chat Models@{uu}@{ub}

@{b}@{u}GPT-4o@{uu}@{ub}

GPT-4o ("o" for "omni") is our most advanced GPT model. It is multimodal (accepting text or image inputs and outputting text), and it has the same high intelligence as GPT-4 Turbo but is much more efficient—it generates text 2x faster and is 50% cheaper. Additionally, GPT-4o has the best vision and performance across non-English languages of any of our models. GPT-4o is available in the OpenAI API to paying customers.

@{b}Model variants@{ub}

@{b}gpt-4o@{ub}

Our high-intelligence flagship model for complex, multi-step tasks. GPT-4o is cheaper and faster than GPT-4 Turbo. Currently points to gpt-4o-2024-08-06.

Context Window: 128,000
Max Output Tokens: 16,384
Training data: Oct 2023

@{b}gpt-4o-2024-11-20@{ub}

Latest gpt-4o snapshot from November 20th, 2024.

Context Window: 128,000
Max Output Tokens: 16,384
Training data: Oct 2023

@{b}gpt-4o-2024-08-06@{ub}

First snapshot that supports Structured Outputs. gpt-4o currently points to this version.

Context Window: 128,000
Max Output Tokens: 4,096
Training data: Oct 2023

@{b}chatgpt-4o-latest@{ub}

The chatgpt-4o-latest model version continuously points to the version of GPT-4o used in ChatGPT, and is updated frequently, when there are significant changes.

Context Window: 128,000
Max Output Tokens: 16,384
Training data: Oct 2023

@{b}@{u}GPT-4o mini@{uu}@{ub}

GPT-4o mini (“o” for “omni”) is our most advanced model in the small models category, and our cheapest model yet. It is multimodal (accepting text or image inputs and outputting text), has higher intelligence than gpt-3.5-turbo but is just as fast. It is meant to be used for smaller tasks, including vision tasks.

We recommend choosing gpt-4o-mini where you would have previously used gpt-3.5-turbo as this model is more capable and cheaper.

@{b}Model variants@{ub}

@{b}gpt-4o-mini@{ub}

Our affordable and intelligent small model for fast, lightweight tasks. GPT-4o mini is cheaper and more capable than GPT-3.5 Turbo. Currently points to gpt-4o-mini-2024-07-18.

Context Window: 128,000
Max Output Tokens: 16,384
Training data: Oct 2023

@{b}gpt-4o-mini-2024-07-18@{ub}

gpt-4o-mini currently points to this version.

Context Window: 128,000
Max Output Tokens: 16,384
Training data: Oct 2023

@{b}@{u}o1-preview and o1-mini@{uu}@{ub}

The o1 series of large language models are trained with reinforcement learning to perform complex reasoning. o1 models think before they answer, producing a long internal chain of thought before responding to the user.

There are two model types available today:

- o1-preview: reasoning model designed to solve hard problems across domains.
- o1-mini: faster and cheaper reasoning model particularly good at coding, math, and science.

@{b}Model variants@{ub}

@{b}o1@{ub}

Points to the most recent snapshot of the o1 model: o1-2024-12-17
 
Context Window: 200,000
Max Output Tokens: 100,000
Training data: Oct 2023

@{b}o1-2024-12-17@{ub}

The latest o1 model
 
Context Window: 200,000
Max Output Tokens: 100,000
Training data: Oct 2023

@{b}o1-preview@{ub}

Points to the most recent snapshot of the o1 model: o1-preview-2024-09-12

Context Window: 128,000
Max Output Tokens: 32,768
Training data: Oct 2023

@{b}o1-preview-2024-09-12@{ub}

Latest o1 model snapshot

Context Window: 128,000
Max Output Tokens: 32,768
Training data: Oct 2023

@{b}o1-mini@{ub}

Points to the most recent o1-mini snapshot: o1-mini-2024-09-12

Context Window: 128,000
Max Output Tokens: 65,536
Training data: Oct 2023

@{b}o1-mini-2024-09-12@{ub}

Latest o1-mini model snapshot

Context Window: 128,000
Max Output Tokens: 65,536
Training data: Oct 2023

@{b}@{u}GPT-4 Turbo and GPT-4@{uu}@{ub}

GPT-4 is a large multimodal model (accepting text or image inputs and outputting text) that can solve difficult problems with greater accuracy than any of our previous models, thanks to its broader general knowledge and advanced reasoning capabilities.

For many basic tasks, the difference between GPT-4 and GPT-3.5 models is not significant. However, in more complex reasoning situations, GPT-4 is much more capable than any of our previous models.

@{b}Model variants@{ub}

@{b}gpt-4-turbo@{ub}

The latest GPT-4 Turbo model with vision capabilities. Vision requests can now use JSON mode and function calling. Currently points to gpt-4-turbo-2024-04-09.

Context Window: 128,000
Max Output Tokens: 4,096
Training data: Dec 2023

@{b}gpt-4-turbo-2024-04-09@{ub}

GPT-4 Turbo with Vision model. Vision requests can now use JSON mode and function calling. gpt-4-turbo currently points to this version.

Context Window: 128,000
Max Output Tokens: 4,096
Training data: Dec 2023

@{b}gpt-4-turbo-preview@{ub}

GPT-4 Turbo preview model. Currently points to gpt-4-0125-preview.

Context Window: 128,000
Max Output Tokens: 4,096
Training data: Dec 2023

@{b}gpt-4-0125-preview@{ub}

GPT-4 Turbo preview model intended to reduce cases of “laziness” where the model doesn’t complete a task.

Context Window: 128,000
Max Output Tokens: 4,096
Training data: Dec 2023

@{b}gpt-4-1106-preview@{ub}

GPT-4 Turbo preview model featuring improved instruction following, JSON mode, reproducible outputs, parallel function calling, and more. This is a preview model.

Context Window: 128,000
Max Output Tokens: 4,096
Training data: Apr 2023

@{b}gpt-4@{ub}

Currently points to gpt-4-0613.

Context Window: 8,192
Max Output Tokens: 8,192
Training data: Sep 2021

@{b}gpt-4-0613@{ub}

Snapshot of gpt-4 from June 13th 2023 with improved function calling support.

Context Window: 8,192
Max Output Tokens: 8,192
Training data: Sep 2021

@{b}gpt-4-0314@{ub}

Snapshot of gpt-4 from March 14th 2023.

Context Window: 8,192
Max Output Tokens: 8,192
Training data: Sep 2021

@{b}@{u}GPT-3.5 Turbo@{uu}@{ub}

GPT-3.5 Turbo models can understand and generate natural language or code and have been optimized for chat using the Chat Completions API but work well for non-chat tasks as well.

As of July 2024, gpt-4o-mini should be used in place of gpt-3.5-turbo, as it is cheaper, more capable, multimodal, and just as fast. gpt-3.5-turbo is still available for use in the API.

@{b}Model variants@{ub}

@{b}gpt-3.5-turbo-0125@{ub}

The latest GPT-3.5 Turbo model with higher accuracy at responding in requested formats and a fix for a bug which caused a text encoding issue for non-English language function calls.

Context Window: 16,385
Max Output Tokens: 4,096
Training data: Sep 2021

@{b}gpt-3.5-turbo@{ub}

Currently points to gpt-3.5-turbo-0125.

Context Window: 16,385
Max Output Tokens: 4,096
Training data: Sep 2021

@{b}gpt-3.5-turbo-1106@{ub}

GPT-3.5 Turbo model with improved instruction following, JSON mode, reproducible outputs, parallel function calling, and more.

Context Window: 16,385
Max Output Tokens: 4,096
Training data: Sep 2021

@{b}@{u}Image Generation Models@{uu}@{ub}

@{b}DALL-E 3@{ub}

The latest DALL·E model released in Nov 2023.

@{b}DALL-E 2@{ub}

The previous DALL·E model released in Nov 2022. The 2nd iteration of DALL·E with more realistic, accurate, and 4x greater resolution images than the original model.

@endnode

@node changelog "Changelog"
@{b}Changelog@{ub}

@{b}2.2.0 (2025-01-04)@{ub}

- Support for ApolloOS
- Image preview now works in MorphOS and in MUI 3 (AmigaGPT now has MCC_Guigfx as a prerequisite)
- Replace the chat output sections from MCC_TextEditor class to MCC_NFloattext for improved memory usage and compatibility with ApolloOS
- Improved encoding to and from UTF-8 with enhanced character lookalike remapping (AmigaGPT now has codesets.library as a prerequisite)
- Fix crash when the first data chunk received from OpenAI is smaller than the HTTP header
- Fix crash when OpenAI sends a blank content string

@{b}2.1.2 (2024-12-31)@{ub}

- Fix bug where not all messages were being saved in a new conversation
- Fix menu items not being selectable

@{b}2.1.1 (2024-12-30)@{ub}

- Add more clear error message when the user's installed AmiSSL version is too old

@{b}2.1.0 (2024-12-28)@{ub}

- Add proxy server support

@{b}2.0.2 (2024-12-24)@{ub}

- Fix memory leaks
- Make more resiliant to connection errors or disconnections

@{b}2.0.1 (2024-12-23)@{ub}

- Fix a bug preventing you being able to create a new image after making one
- Fix crash when receiving an error generating an image

@{b}2.0.0 (2024-12-22)@{ub}

- Completely replace ReAction with MUI 5 with backwards compatibility with MUI 3
- Now fully compatible with AmigaOS 3.1
- New native version for MorphOS
- Enhanced "About AmigaGPT" panel
- New "About MUI" panel
- Fix memory leak when receiving messages
- View instant preview of generated images (MUI 5 only and not supported in MorphOS)
- Updated to the latest OpenAI models

@{b}1.6.3 (2024-09-18)@{ub}

- Fixed error receiving chat messages

@{b}1.6.2 (2024-09-01)@{ub}

- Increase max OpenAI API key size to 256 characters

@{b}1.6.1 (2024-08-31)@{ub}

- Default to speech disabled
- Fix crash when trying to close speech system when it failed to initialise

@{b}1.6.0 (2024-08-10)@{ub}

- Add the GPT4o Mini model
- Remove the unused Accent menu item from OS4 version
- Fix bug where some voice menu items in the OS4 version fail to display a checkmark after you select it

@{b}1.5.1 (2024-06-26)@{ub}

- Send button no longer appears after image creation
- Create image button stays disabled after image creation. Select new image to create a new one
- Updated to latest json-c

@{b}1.5.0 (2024-05-18)@{ub}

- Support for OpenAI's 16-bit text to speech voices. Fast internet connection recommended
- Updated to latest OpenAI chat models (including GPT-4o which will only work for ChatGPT Plus subscribers for now)
- Removed debug symbols for faster and smaller executable

@{b}1.4.6 (2024-04-13)@{ub}

- Send button no longer appears in top left corner after closing a generated
  image for Amiga 3.X

@{b}1.4.5 (2024-04-06)@{ub}

- Fixes the stack size calculation so it will no longer warn you that the
  stack size is too small if it really isn't

@{b}1.4.4 (2024-03-23)@{ub}

- Fixes a bug in chat mode in AmigaOS 3.X where the send button stays disabled
  after an error occurs
- Change the stack size in the program .info file to the recommended 32768
  bytes
- Fix bug where accents were not loaded properly resulting in the speech to
  fail

@{b}1.4.3 (2024-02-08)@{ub}

- Updated to the latest OpenAI chat models
- Fix crash when config.json doesn't exist
- Fix crash when selecting the root menu items
- Adjust screen colours to enhance visibility
- Improved error handling for connection errors
- Use a stack cookie to set minimum stack size to 32768 bytes (AmigaOS 3.1.4 or higher required)
- Shows a warning if the stack size is smaller than 32768 bytes (AmigaOS 3 only)
- Send button no longer appears in corner of screen on image mode in 3.X after an error message is dismissed

@{b}1.4.2 (2024-01-31)@{ub}

- Replaced clicktabs for AmigaOS 3.X since the version is too old and will crash. 3.X users can select the mode at startup.

@{b}1.4.1 (2024-01-22)@{ub}

- Fixed bug where the prompt textbox remains in a readonly state when switching from image mode to chat mode

@{b}1.4.0 (2024-01-21)@{ub}

- AI image generation! Switch between chat and image generation mode by clicking the tabs at the top of the screen
- Colour tweaks
- Status bar shows more information and colours
- About screen can now be dismissed with any key press or mouse click
- The OpenAI API key requester now populates with the existing key if it exists so you can more easily find and fix typos in the key
- Added the ability to set the chat system (new "Chat System" menu item)
- Fix crash when having a conversation consising of a few messages

@{b}1.3.1 (2023-12-02)@{ub}

- Fix pasting into chat input textbox (AmigaOS 3.2 and 4.1 only for now)
- Remove trailing newline from user messages
- Enclose all user lines in asterisks to make bold
- Fix memory leak that was present in downloading responses from OpenAI

@{b}1.3.0 (2023-11-14)@{ub}

- Native PPC version for AmigaOS 4.1
- Scrollbar works again
- Improve response handling from OpenAI preventing a crash
- Latest OpenAI models added

@{b}1.2.1 (2023-11-04)@{ub}

- Now fully backwards compatible with Cloanto's AmigaOS 3.X (included in Amiga Forever)

@{b}1.2.0 (2023-10-04)@{ub}

- Now fully backwards compatible with AmigaOS 3.9

@{b}1.1.0 (2023-07-22)@{ub}

- Now supports characters from Western languages other than English
- Blank responses from OpenAI no longer cause a crash

@{b}1.0.1 (2023-06-24)@{ub}

- After setting UI font, the font is now applied fully without needing to restart the app

@{b}1.0  (2023-06-17)@{ub}

- Initial release

@endnode
